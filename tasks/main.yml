---
- name: loki | assert usage of systemd as an init system
  assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This module only works with systemd"

- name: loki | get systemd version
  command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version

- name: loki | set systemd version fact
  set_fact:
    loki_systemd_version: "{{ __systemd_version.stdout_lines[0].split(' ')[-1] }}"
    
- name: loki | create loki system group
  group:
    name: loki
    system: true
    state: present

- name: loki | create loki system user
  user:
    name: loki
    system: true
    shell: "/usr/sbin/nologin"
    group: loki
    append: true
    createhome: false
    home: "{{ loki_db_dir }}"

- name: loki | create loki data directory
  file:
    path: "{{ loki_db_dir }}"
    state: directory
    owner: loki
    group: loki
    mode: 0755

- name: loki | create loki configuration directory
  file:
    path: "{{ loki_config_dir }}"
    state: directory
    owner: root
    group: loki
    mode: 0770


- block:
    - name: loki | get checksum list
      set_fact:
        __loki_checksums: "{{ lookup('url', 'https://github.com/grafana/loki/releases/download/v' + loki_version + '/SHA256SUMS', wantlist=True) | list }}"
      run_once: true

    - name: "loki | get checksum for {{ go_arch }} architecture"
      set_fact:
        __loki_checksum: "{{ item.split(' ')[0] }}"
      with_items: "{{ __loki_checksums }}"
      when:
        - "('loki-linux-' + go_arch + '.zip') in item"
   delegate_to: localhost
  
  

- block:
    - name: loki | download loki binary to local folder
      become: false
      get_url:
        url: "https://github.com/grafana/loki/releases/download/v{{ loki_version }}/loki-linux-{{ go_arch }}.zip"
        dest: "/tmp/loki-{{ loki_version }}.linux-{{ go_arch }}.zip"
        checksum: "sha256:{{ __loki_checksum }}"
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      # run_once: true # <-- this cannot be set due to multi-arch support
      delegate_to: localhost
      check_mode: false
      
    - name: loki | unpack loki binary
      become: false
      unarchive:
        src: "/tmp/loki-{{ loki_version }}.linux-{{ go_arch }}.zip"
        dest: "/tmp"
        creates: "/tmp/loki-linux-{{ go_arch }}"
      delegate_to: localhost
      check_mode: false
      
    - name: loki | propagate official loki and binary
      copy:
        src: "/tmp/loki-linux-{{ go_arch }}"
        dest: "{{ _loki_binary_install_dir }}/loki"
        mode: 0755
        owner: root
        group: root
      notify:
        - restart loki
        
- name: loki | configure loki
  copy:
    src: "{{ loki_config_file }}"
    dest: "{{ loki_config_dir }}/loki-config.yml"
    force: true
    owner: root
    group: loki
    mode: 0640
  notify:
    - reload loki

- name: loki | create systemd service unit
  template:
    src: loki.service.j2
    dest: /etc/systemd/system/loki.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart loki
